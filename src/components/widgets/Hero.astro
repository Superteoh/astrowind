---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import type { CallToAction } from '~/types';

export interface Props {
  id?: string;
  title?: string;
  subtitle?: string;
  tagline?: string;
  content?: string;
  actions?: string | CallToAction[];
  media?: { src: string; alt: string; type: 'image' | 'gif' }; // Aseg√∫rate de que el tipo sea correcto
}

const {
  id,
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),
  media,
} = Astro.props;
---

<section class="relative md:-mt-[76px] not-prose" {...id ? { id } : {}}>
  <div class="absolute inset-0 pointer-events-none" aria-hidden="true"></div>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div class="py-12 md:py-20">
      <div class="flex flex-wrap md:flex-nowrap items-center">
        <div class="text-center pb-10 md:pb-16 max-w-5xl mx-auto md:w-1/2">
          {tagline && (
            <p
              class="text-base text-secondary dark:text-blue-200 font-bold tracking-wide uppercase"
              set:html={tagline}
            />
          )}
          {title && (
            <h1
              class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading dark:text-gray-200"
              set:html={title}
            />
          )}
          <div class="max-w-3xl mx-auto">
            {subtitle && <p class="text-xl text-muted mb-6 dark:text-slate-300" set:html={subtitle} />}
            {actions && (
              <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4">
                {Array.isArray(actions) ? (
                  actions.map((action) => (
                    <div class="flex w-full sm:w-auto">
                      <Button {...(action || {})} class="w-full sm:mb-0" />
                    </div>
                  ))
                ) : (
                  <Fragment set:html={actions} />
                )}
              </div>
            )}
          </div>
          {content && <Fragment set:html={content} />}
        </div>
        <div class="w-full md:w-1/2 flex justify-center items-center">
          {media && (
            <div class="relative m-auto max-w-5xl">
              {media.type === 'image' || media.type === 'gif' ? (
                <img src={media.src} alt={media.alt} class="hero-image mx-auto rounded-md w-full" />
              ) : null}
            </div>
          )}
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .hero-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    padding: 2rem;
  }

  .hero-content {
    flex: 1 1 45%;
  }

  .hero-media {
    flex: 1 1 45%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .hero-image {
    max-width: 100%;
    border-radius: 10px;
  }

  .btn {
    padding: 0.5rem 1rem;
    margin: 0.5rem;
    text-decoration: none;
  }

  .btn-primary {
    background-color: #007bff;
    color: white;
  }

  .btn-secondary {
    background-color: #6c757d;
    color: white;
  }
</style>
